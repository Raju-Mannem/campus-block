name: Deploy Serverless App with Terraform

on:
  push:
    branches: [master]
    paths: [src/**, package.json, package-lock.json, terraform/**]
    workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Clean workspace
        run: rm -rf .terraform terraform.tfstate* .terraform.lock.hcl .aws-sam node_modules dist lambda.zip

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies and build
        run: npm ci --only=production && npx esbuild src/index.ts --bundle --platform=node --target=node20 --outfile=dist/index.js

      - name: Package Lambda
        run: |
          cd dist
          zip -r ../lambda.zip index.js ../package.json
          cd ..
          
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github_actions
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload Lambda zip to S3
        run: aws s3 cp lambda.zip s3://${{ secrets.LAMBDA_S3_BUCKET }}/lambda.zip

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -input=false
        working-directory: terraform
        env:
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_mongodb_uri: ${{ secrets.MONGODB_URI }}
          TF_VAR_s3_bucket_name: ${{ secrets.S3_BUCKET_NAME }}
          TF_VAR_cloudfront_domain: ${{ secrets.CLOUDFRONT_DOMAIN }}
          TF_VAR_razorpay_key_id: ${{ secrets.RAZORPAY_KEY_ID }}
          TF_VAR_razorpay_key_secret: ${{ secrets.RAZORPAY_KEY_SECRET }}
          TF_VAR_lambda_s3_bucket: ${{ secrets.LAMBDA_S3_BUCKET }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        working-directory: terraform
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_mongodb_uri: ${{ secrets.MONGODB_URI }}
          TF_VAR_s3_bucket_name: ${{ secrets.S3_BUCKET_NAME }}
          TF_VAR_cloudfront_domain: ${{ secrets.CLOUDFRONT_DOMAIN }}
          TF_VAR_razorpay_key_id: ${{ secrets.RAZORPAY_KEY_ID }}
          TF_VAR_razorpay_key_secret: ${{ secrets.RAZORPAY_KEY_SECRET }}
          TF_VAR_lambda_s3_bucket: ${{ secrets.LAMBDA_S3_BUCKET }}

      - name: Show API Endpoint
        run: terraform output -raw api_endpoint || terraform output api_endpoint
        working-directory: terraform
