name: Deploy to AWS Lambda via SAM

on:
  push:
    branches: [master]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Clean .aws-sam directory
        run: rm -rf .aws-sam
        working-directory: ${{ github.workspace }}

      - name: Print working directory
        run: pwd
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Clean pip cache
        run: pip cache purge || true

      - name: Set up AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Uninstall existing SAM CLI
        run: pip uninstall -y aws-sam-cli || true

      - name: Install specific SAM CLI version
        run: pip install aws-sam-cli==1.110.0

      - name: Check SAM CLI Version
        run: sam --version

      - name: Clean pip cache
        run: pip cache purge || true

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::864899850979:role/github_actions
          aws-region: ${{ secrets.AWS_REGION }}

      - name: SAM Build
        run: sam build
        working-directory: ${{ github.workspace }}

      - name: Show built template
        run: cat .aws-sam/build/template.yaml
        working-directory: ${{ github.workspace }}

      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      - name: List build directory
        run: ls -l .aws-sam/build
        working-directory: ${{ github.workspace }}

      - name: List files
        run: ls -l

      - name: Check AWS Identity
        run: aws sts get-caller-identity

      - name: Print samconfig.toml if it exists
        run: |
          if [ -f samconfig.toml ]; then
            echo "samconfig.toml contents:"
            cat samconfig.toml
          else
            echo "No samconfig.toml found."
          fi

      - name: Print SAM Template Path and Contents
        run: |
          echo "SAM Template Path: $(pwd)/template.yaml"
          cat -A template.yaml
      
      - name: Validate SAM template
        run: sam validate --template-file template.yaml
      
      - name: Check template.yaml encoding
        run: |
          file template.yaml
          hexdump -C template.yaml | head -20

      - name: SAM Build and Deploy in Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            -e AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY \
            -e AWS_SESSION_TOKEN \
            -e AWS_REGION \
            amazon/aws-sam-cli-build-image-nodejs20.x \
            bash -c "sam build && sam deploy --template-file template.yaml --stack-name my-express-api --capabilities CAPABILITY_IAM --s3-bucket ${{ secrets.SAM_ARTIFACT_BUCKET }} --region ${{ secrets.AWS_REGION }}"